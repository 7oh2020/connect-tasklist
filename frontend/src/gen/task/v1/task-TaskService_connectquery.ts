// @generated by protoc-gen-connect-query v0.2.1 with parameter "target=ts"
// @generated from file task/v1/task.proto (package rpc.task.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import {
  ChangeTaskNameRequest,
  ChangeTaskNameResponse,
  CompleteTaskRequest,
  CompleteTaskResponse,
  CreateTaskRequest,
  CreateTaskResponse,
  DeleteTaskRequest,
  DeleteTaskResponse,
  GetTaskListRequest,
  GetTaskListResponse,
  UncompleteTaskRequest,
  UncompleteTaskResponse,
} from "./task_pb.js";

export const typeName = "rpc.task.v1.TaskService";

/**
 * @generated from rpc rpc.task.v1.TaskService.GetTaskList
 */
export const getTaskList = createQueryService({
  service: {
    methods: {
      getTaskList: {
        name: "GetTaskList",
        kind: MethodKind.Unary,
        I: GetTaskListRequest,
        O: GetTaskListResponse,
      },
    },
    typeName: "rpc.task.v1.TaskService",
  },
}).getTaskList;

/**
 * @generated from rpc rpc.task.v1.TaskService.CreateTask
 */
export const createTask = createQueryService({
  service: {
    methods: {
      createTask: {
        name: "CreateTask",
        kind: MethodKind.Unary,
        I: CreateTaskRequest,
        O: CreateTaskResponse,
      },
    },
    typeName: "rpc.task.v1.TaskService",
  },
}).createTask;

/**
 * @generated from rpc rpc.task.v1.TaskService.CompleteTask
 */
export const completeTask = createQueryService({
  service: {
    methods: {
      completeTask: {
        name: "CompleteTask",
        kind: MethodKind.Unary,
        I: CompleteTaskRequest,
        O: CompleteTaskResponse,
      },
    },
    typeName: "rpc.task.v1.TaskService",
  },
}).completeTask;

/**
 * @generated from rpc rpc.task.v1.TaskService.UncompleteTask
 */
export const uncompleteTask = createQueryService({
  service: {
    methods: {
      uncompleteTask: {
        name: "UncompleteTask",
        kind: MethodKind.Unary,
        I: UncompleteTaskRequest,
        O: UncompleteTaskResponse,
      },
    },
    typeName: "rpc.task.v1.TaskService",
  },
}).uncompleteTask;

/**
 * @generated from rpc rpc.task.v1.TaskService.ChangeTaskName
 */
export const changeTaskName = createQueryService({
  service: {
    methods: {
      changeTaskName: {
        name: "ChangeTaskName",
        kind: MethodKind.Unary,
        I: ChangeTaskNameRequest,
        O: ChangeTaskNameResponse,
      },
    },
    typeName: "rpc.task.v1.TaskService",
  },
}).changeTaskName;

/**
 * @generated from rpc rpc.task.v1.TaskService.DeleteTask
 */
export const deleteTask = createQueryService({
  service: {
    methods: {
      deleteTask: {
        name: "DeleteTask",
        kind: MethodKind.Unary,
        I: DeleteTaskRequest,
        O: DeleteTaskResponse,
      },
    },
    typeName: "rpc.task.v1.TaskService",
  },
}).deleteTask;
